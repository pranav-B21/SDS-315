fig.height = 5,
fig.width = 8,
warning = FALSE,
tidy = TRUE,
tidy.opts = list(width.cutoff = 60)
)
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
#The sample proportion of males who folded their left arm on top.
#The sample proportion of females who folded their left arm on top
dataset
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
View(dataset)
dataset.count("sex")
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
dataset %>%
count("Sex")
#libraries
library(ggplot2)
library(rvest)
library(tidyverse)
library(stringr)
library(kableExtra)
library(mosaic)
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
dataset %>%
count("Sex")
#The sample proportion of males who folded their left arm on top.
#The sample proportion of females who folded their left arm on top
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
dataset %>%
count("Female")
#The sample proportion of males who folded their left arm on top.
#The sample proportion of females who folded their left arm on top
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
dataset %>%
count(Sex)
#The sample proportion of males who folded their left arm on top.
#The sample proportion of females who folded their left arm on top
dataset[Sex]
sum(dataset$Sex == 'Male')
#The sample proportion of males who folded their left arm on top
prop.table(dataset$W.hnd == 'Left')
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
sum(dataset$Sex == 'Male')
sum(dataset$Sex == 'Female')
#The sample proportion of males who folded their left arm on top
prop.table(dataset$W.hnd == 'Left')
#The sample proportion of females who folded their left arm on top
#The sample proportion of males who folded their left arm on top
prop.table(dataset$W.hnd)
#The sample proportion of males who folded their left arm on top
prop(dataset$W.hnd == 'Left')
#The sample proportion of males who folded their left arm on top
prop = sum(dataset$W.hnd == 'Left') /  sum(dataset$Sex == 'Male')
prop
sum(dataset$W.hnd == 'Left')
sum(dataset$Sex == 'Male')
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
male = sum(dataset$Sex == 'Male')
female = sum(dataset$Sex == 'Female')
#The sample proportion of males who folded their left arm on top
prop = sum(dataset$LonR_fold == 1) / male
#The sample proportion of females who folded their left arm on top
prop
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
male = sum(dataset$Sex == 'Male')
female = sum(dataset$Sex == 'Female')
#The sample proportion of males who folded their left arm on top
prop_male = sum(dataset$LonR_fold == 1) / male
prop_female = sum(dataset$LonR_fold == 1) / female
#The sample proportion of females who folded their left arm on top
#The sample proportion of males who folded their left arm on top
prop_male = sum(dataset$LonR_fold == 1 && sum(dataset$Sex == 'Male')) / male
sum(dataset$LonR_fold == 1 && sum(dataset$Sex == 'Male')) / male
sum(dataset$LonR_fold == 1 && sum(dataset$Sex == 'Male'))
male_left_fold <- sum(dataset$LonR_fold == 1 & dataset$Sex == 'Male')
#The sample proportion of males who folded their left arm on top
prop_male = sum(dataset$LonR_fold == 1 & sum(dataset$Sex == 'Male')) / male
prop_male
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
male = sum(dataset$Sex == 'Male')
female = sum(dataset$Sex == 'Female')
#The sample proportion of males who folded their left arm on top
prop_male = sum(dataset$LonR_fold == 1 & sum(dataset$Sex == 'Male')) / male
prop_female = sum(dataset$LonR_fold == 1 & sum(dataset$Sex == 'Female')) / female
#The sample proportion of females who folded their left arm on top
prop_female
prop_male
male_left_fold <- sum(dataset$LonR_fold == 1 & dataset$Sex == 'Male')
total_males <- sum(dataset$Sex == 'Male')
prop_male <- male_left_fold / total_males
prop_male
total_males
male
prop_male = sum(dataset$LonR_fold == 1 & sum(dataset$Sex == 'Male')) / male
prop_male
#The sample proportion of males who folded their left arm on top
male_left_fold <- sum(dataset$LonR_fold == 1 & dataset$Sex == 'Male')
prop_male <- male_left_fold / male
prop_male
#The number of male and female students in the dataset.
dataset <- read.csv('armfold.csv')
male = sum(dataset$Sex == 'Male')
female = sum(dataset$Sex == 'Female')
#The sample proportion of males who folded their left arm on top
male_left_fold <- sum(dataset$LonR_fold == 1 & dataset$Sex == 'Male')
prop_male <- male_left_fold / male
female_left_fold <- sum(dataset$LonR_fold == 1 & dataset$Sex == 'Female')
prop_female <- female_left_fold / female
#The sample proportion of females who folded their left arm on top
prop_male
prop_female
male
female
prop_male
prop_female
diff = prop_male - prop_female
diff
#CI
# Define success counts and sample sizes
x <- c(male_left_fold, female_left_fold)
n <- c(male, female)
# Compute the 95% confidence interval
prop.test(x = x, n = n, conf.level = 0.95)
#The number of male and female students in the dataset.
turnout <- read.csv('turnout.csv')
View(turnout)
recieved_call <- turnout$GOTV_call == 1
recieved_call
recieved_call <- sum(turnout$GOTV_call == 1)
recieved_call
votes <- sum(turnout$voted1998 == 1)
prop_call_vote <- sum(turnout$GOTV_call == 1 & turnout$voted1998 == 1) / votes
prop_nocall_vote <- sum(turnout$GOTV_call == 0 & turnout$voted1998 == 1) / votes
prop_call_vote
prop_nocall_vote
diff = prop_call_vote - prop_nocall_vote
diff
# Proportion who received a GOTV call and voted in 1998
voted_gotv <- mean(turnout$voted1998[turnout$GOTV_call == 1])
# Proportion who did NOT receive a GOTV call and voted in 1998
voted_nogotv <- mean(turnout$voted1998[turnout$GOTV_call == 0])
# Print the proportions
voted_gotv
voted_nogotv
prop_call_vote <- sum(turnout$voted1998 == 1 & turnout$GOTV_call == 1) / sum(turnout$GOTV_call == 1)
prop_nocall_vote <- sum(turnout$voted1998 == 1 & turnout$GOTV_call == 0) / sum(turnout$GOTV_call == 0)
prop_call_vote
prop_nocall_vote
voted_gotv
diff = prop_call_vote - prop_nocall_vote
diff
prop_call_vote
prop_nocall_vote
diff
# 95% CI for difference in proportions
n1 <- sum(df$GOTV_call == 1)
n0 <- sum(df$GOTV_call == 0)
# 95% CI for difference in proportions
n1 <- sum(turnout$GOTV_call == 1)
n0 <- sum(turnout$GOTV_call == 0)
se_diff <- sqrt((prop_gotv * (1 - prop_gotv)) / n1 + (prop_nogotv * (1 - prop_nogotv)) / n0)
se_diff <- sqrt((prop_gotv * (1 - prop_gotv)) / n1 + (prop_nogotv * (1 - prop_nogotv)) / n0)
se_diff <- sqrt((prop_call_vote * (1 - prop_call_vote)) / n1 + (prop_nocall_vote * (1 - prop_nocall_vote)) / n0)
z_star <- 1.96
ci_lower <- diff_prop - z_star * se_diff
z_star <- 1.96
ci_lower <- diff - z_star * se_diff
ci_upper <- diff + z_star * se_diffx = x, n = n, conf.level = 0.95)
ci_upper <- diff + z_star * se_diff
ci_lower
ci_upper
se_diff
# Example for AGE
mean(df$AGE[df$GOTV_call == 1])
#voted1996 as a confounder
table(turnout$GOTV_call, turnout$voted1996)
prop.table(table(turnout$GOTV_call, turnout$voted1996), 1)  # row proportions
table(turnout$voted1996, turnout$voted1998)
prop.table(table(turnout$voted1996, turnout$voted1998), 1)
prop.table(table(turnout$GOTV_call, turnout$voted1996), 1)  # row proportions
#voted1996 as a confounder
table(turnout$GOTV_call, turnout$voted1996)
prop.table(table(turnout$GOTV_call, turnout$voted1996), 1)  # row proportions
table(turnout$voted1996, turnout$voted1998)
prop.table(table(turnout$voted1996, turnout$voted1998), 1)
#age as a confounder
tapply(turnout$AGE, turnout$GOTV_call, mean)
tapply(turnout$AGE, turnout$GOTV_call, sd)
t.test(AGE ~ GOTV_call, data = turnout)
tapply(turnout$AGE, turnout$voted1998, mean)
tapply(turnout$AGE, turnout$voted1998, sd)
t.test(AGE ~ voted1998, data = turnout)
#age as a confounder
tapply(turnout$AGE, turnout$GOTV_call, mean)
tapply(turnout$AGE, turnout$GOTV_call, sd)
t.test(AGE ~ GOTV_call, data = turnout)
tapply(turnout$AGE, turnout$voted1998, mean)
tapply(turnout$AGE, turnout$voted1998, sd)
t.test(AGE ~ voted1998, data = turnout)
#age as a confounder
tapply(turnout$AGE, turnout$GOTV_call, mean)
tapply(turnout$AGE, turnout$GOTV_call, sd)
t.test(AGE ~ GOTV_call, data = turnout)
t.test(AGE ~ voted1998, data = turnout)
t.test(AGE ~ GOTV_call, data = turnout)
#MAJORPRTY as a confounder
table(turnout$GOTV_call, turnout$MAJORPTY)
prop.table(table(turnout$GOTV_call, turnout$MAJORPTY), 1)
table(turnout$MAJORPTY, turnout$voted1998)
prop.table(table(turnout$MAJORPTY, turnout$voted1998), 1)
prop.table(table(turnout$GOTV_call, turnout$MAJORPTY), 1)
prop.table(table(turnout$MAJORPTY, turnout$voted1998), 1)
#libraries
library(ggplot2)
library(rvest)
library(tidyverse)
library(stringr)
library(kableExtra)
library(mosaic)
library(MatchIt)
match.out <- matchit(GOTV_call ~ voted1996 + AGE + MAJORPTY,
data = turnout,
method = "nearest",
ratio = 5)
matched_data <- match.data(match.out)
summary(match.out)
#prop with matching
prop_call_vote_m <- sum(matched_data$voted1998 == 1 & matched_data$GOTV_call == 1) / sum(matched_data$GOTV_call == 1)
prop_nocall_vote_m <- sum(matched_data$voted1998 == 1 & matched_data$GOTV_call == 0) / sum(matched_data$GOTV_call == 0)
#diff
diff_m <- prop_call_vote_m - prop_nocall_vote_m
#CI
n1_m <- sum(matched_data$GOTV_call == 1)
n0_m <- sum(matched_data$GOTV_call == 0)
se_diff_m <- sqrt((prop_call_vote_m * (1 - prop_call_vote_m)) / n1_m +
(prop_nocall_vote_m * (1 - prop_nocall_vote_m)) / n0_m)
z_star <- 1.96
ci_lower_m <- diff_m - z_star * se_diff_m
ci_upper_m <- diff_m + z_star * se_diff_m
```
#prop with matching
prop_call_vote_m <- sum(matched_data$voted1998 == 1 & matched_data$GOTV_call == 1) / sum(matched_data$GOTV_call == 1)
prop_nocall_vote_m <- sum(matched_data$voted1998 == 1 & matched_data$GOTV_call == 0) / sum(matched_data$GOTV_call == 0)
#diff
diff_m <- prop_call_vote_m - prop_nocall_vote_m
#CI
n1_m <- sum(matched_data$GOTV_call == 1)
n0_m <- sum(matched_data$GOTV_call == 0)
se_diff_m <- sqrt((prop_call_vote_m * (1 - prop_call_vote_m)) / n1_m +
(prop_nocall_vote_m * (1 - prop_nocall_vote_m)) / n0_m)
z_star <- 1.96
ci_lower_m <- diff_m - z_star * se_diff_m
ci_upper_m <- diff_m + z_star * se_diff_m
ci_lower_m
ci_upper_m
#prop with matching
prop_call_vote_m <- sum(matched_data$voted1998 == 1 & matched_data$GOTV_call == 1) / sum(matched_data$GOTV_call == 1)
prop_nocall_vote_m <- sum(matched_data$voted1998 == 1 & matched_data$GOTV_call == 0) / sum(matched_data$GOTV_call == 0)
prop_call_vote_m
prop_nocall_vote_m <- sum(matched_data$voted1998 == 1 & matched_data$GOTV_call == 0) / sum(matched_data$GOTV_call == 0)
prop_nocall_vote_m
prop_call_vote_m
#diff
diff_m <- prop_call_vote_m - prop_nocall_vote_m
diff_m
ci_lower_m <- diff_m - z_star * se_diff_m
ci_upper_m <- diff_m + z_star * se_diff_m
ci_lower_m
ci_upper_m
ci_lower_m
ci_upper_m
knitr::opts_chunk$set(
fig.height = 5,
fig.width = 8,
warning = FALSE,
tidy = TRUE,
tidy.opts = list(width.cutoff = 60)
)
creatinine <- read.csv('creatinine.csv)
creatinine
creatinine <- read.csv('creatinine.csv')
creatinine
View(creatinine)
creatinine$age == 5
creatinine[creatinine$age == 5]
age55 <- creatinine[creatinine$age == 5]
age55
creatinine <- read.csv('creatinine.csv')
model <- lm(creatclear ~ age, data = creatinine)
summary(model)
# Predict for age 55 using the model
predict(model, data.frame(age = 55))
creatinine <- read.csv('creatinine.csv')
model <- lm(creatclear ~ age, data = creatinine)
summary(model)
#A
predict(model, data.frame(age = 55))
#B
coef(model)["age"]
#C
pred_40 <- predict(model, data.frame(age = 40)) #predicted vals
pred_60 <- predict(model, data.frame(age = 60))
actual_40 <- 135 #actual vals
actual_60 <- 112
#diffs
diff_40 <- actual_40 - pred_40
diff_60 <- actual_60 - pred_60
diff_40
diff_60
#B
coef(model)["age"]
diff_40
diff_60
diff_40
diff_60
covid <- read.csv('covid.csv')
View(covid)
View(creatinine)
italy_data <- covid[covid$country == 'Italy']
covid[covid$country == 'Italy']
covid <- read.csv('covid.csv')
italy_data <- covid[covid$country == 'Italy']
italy_data <- covid[covid$country = 'Italy']
covid$country == 'Italy'
italy_data <- covid[covid$country != 'Italy']
italy_data <- covid[covid$country == 'Italy',]
covid_model_italy <- lm(log(deaths) ~ days_since_first_death, data = italy_data)
covid_model_italy
#growth rate
growth_rate_italy <- coef(model_italy)["days_since_first_death"]
#growth rate
growth_rate_italy <- coef(covid_model_italy)["days_since_first_death"]
growth_rate_italy
#doubling time
doubling_time_italy <- log(2) / r_italy
#doubling time
doubling_time_italy <- log(2) / growth_rate_italy
#doubling time
doubling_time_italy <- log(2) / growth_rate_italy
doubling_time_italy
covid <- read.csv('covid.csv')
italy_data <- covid[covid$country == 'Italy',]
#model
covid_model_italy <- lm(log(deaths) ~ days_since_first_death, data = italy_data)
#growth rate
growth_rate_italy <- coef(covid_model_italy)["days_since_first_death"]
#doubling time
doubling_time_italy <- log(2) / growth_rate_italy
doubling_time_italy
growth_rate_italy
boot_covid_model_italy = do(10000)*lm(log(deaths) ~ days_since_first_death, data = italy_data)
#libraries
library(ggplot2)
library(rvest)
library(tidyverse)
library(stringr)
library(kableExtra)
library(mosaic)
boot_covid_model_italy = do(10000)*lm(log(deaths) ~ days_since_first_death, data = italy_data)
confint(boot_covid_model_italy, level = 0.95)
boot_covid_model_italy = do(10000)*lm(log(deaths) ~ days_since_first_death, data = italy_data)
confint(boot_covid_model_italy, level = 0.95)
boot_covid_model_italy = do(10000)*lm(log(deaths) ~ days_since_first_death, data = resample(italy_data))
confint(boot_covid_model_italy, level = 0.95)
confint(boot_covid_model_italy, level = 0.95)
covid_model_italy
#growth rate
growth_rate_italy <- coef(covid_model_italy)["days_since_first_death"]
growth_rate_italy
confint(boot_covid_model_italy, level = 0.95)
#doubling time
doubling_time_italy_l <- log(2) / 0.1586809 #lower
doubling_time_italy_u <- log(2) / 0.2078943 #upper
doubling_time_italy_u
doubling_time_italy_l
confint(boot_covid_model_italy, level = 0.95)
doubling_time_italy_l
doubling_time_italy_u
spain_data <- covid[covid$country == 'Spain',]
spain_data
#model
covid_model_spain <- lm(log(deaths) ~ days_since_first_death, data = spain_data)
boot_covid_model_spain = do(10000)*lm(log(deaths) ~ days_since_first_death, data = resample(spain_data))
boot_covid_model_spain = do(10000)*lm(log(deaths) ~ days_since_first_death, data = resample(spain_data))
confint(boot_covid_model_spain, level = 0.95)
covid_model_spain
#growth rate
growth_rate_spain <- coef(covid_model_spain)["days_since_first_death"]
growth_rate_spain
confint(boot_covid_model_spain, level = 0.95)
confint(boot_covid_model_italy, level = 0.95)
confint(boot_covid_model_italy, level = 0.95)
spain_data <- covid[covid$country == 'Spain',]
#model
covid_model_spain <- lm(log(deaths) ~ days_since_first_death, data = spain_data)
boot_covid_model_spain = do(10000)*lm(log(deaths) ~ days_since_first_death, data = resample(spain_data))
confint(boot_covid_model_spain, level = 0.95)
#growth rate
growth_rate_spain <- coef(covid_model_spain)["days_since_first_death"]
#doubling time
doubling_time_italy_l <- log(2) / 0.1586809 #lower
doubling_time_italy_u <- log(2) / 0.2078943 #upper
confint(boot_covid_model_spain, level = 0.95)
#doubling time
doubling_time_italy_l <- log(2) / 0.2342065 #lower
doubling_time_italy_u <- log(2) / 0.3175116 #upper
#doubling time
doubling_time_spain_l <- log(2) / 0.2342065 #lower
doubling_time_spain_u <- log(2) / 0.3175116 #upper
doubling_time_spain_l
doubling_time_spain_u <- log(2) / 0.3175116 #upper
doubling_time_spain_u
geom_line(covid)
ggplot(covid)
ggplot(covid) + aes(x = deaths, y = days_since_first_death)
ggplot(covid) + geom_line(aes(x = deaths, y = days_since_first_death))
ggplot(covid) + geom_line(aes(x = deaths, y = days_since_first_death)) ~ country
ggplot(covid, aes(x = days_since_first_death, y = deaths, color = country)) +
geom_line(size = 1) +
labs(
title = "Daily Reported COVID-19 Deaths Over Time",
x = "Days Since First Reported Death",
y = "Number of Deaths",
color = "Country"
) +
theme_minimal()
ggplot(covid) + geom_line() + aes(x = days_since_first_death, y = deaths, color = country)) +
ggplot(covid, aes(x = days_since_first_death, y = deaths, color = country)) +
geom_line(size = 1) +
labs(
title = "Daily Reported COVID-19 Deaths Over Time",
x = "Days Since First Reported Death",
y = "Number of Deaths",
color = "Country"
) +
theme_minimal()
milk <- read.csv('milk.csv')
milk <- read.csv('milk.csv')
milk <- read.csv('milk.csv')
covid <- read.csv('covid.csv')
milk <- read.csv('milk.csv')
milk <- read.csv('milk.csv')
View(milk)
milk$log_price <- log(milk$price)
milk$log_sales <- log(milk$sales)
model <- lm(log_sales ~ log_price, data = milk)
beta_hat <- coef(model)["log_price"]
milk$log_price
milk <- read.csv('milk.csv')
milk$log_price <- log(milk$price)
milk$log_sales <- log(milk$sales)
model <- lm(log_sales ~ log_price, data = milk)
beta_hat <- coef(model)["log_price"]
model
beta_hat <- coef(model)["log_price"]
beta_hat
boot_milk_model = do(10000)*lm(log_sales ~ log_price, data = resample(milk))
confint(boot_milk_model, level = 0.95)
knitr::opts_chunk$set(
fig.height = 5,
fig.width = 8,
warning = FALSE,
tidy = TRUE,
tidy.opts = list(width.cutoff = 60)
)
soldier <- read.csv('soldier.csv')
knitr::opts_chunk$set(
fig.height = 5,
fig.width = 8,
warning = FALSE,
tidy = TRUE,
tidy.opts = list(width.cutoff = 60)
)
#libraries
library(ggplot2)
library(rvest)
library(tidyverse)
library(stringr)
library(kableExtra)
library(mosaic)
soldier <- read.csv('soldier.csv')
soldier <- read.csv('soldier.csv')
#libraries
library(ggplot2)
library(rvest)
library(tidyverse)
library(stringr)
library(kableExtra)
library(mosaic)
#libraries
library(ggplot2)
library(rvest)
library(tidyverse)
library(stringr)
library(kableExtra)
library(mosaic)
soldier <- read.csv('soldier.csv')
wd
setwd("/Users/pranavbelligundu/Documents/GitHub/SDS-315/HW9")
soldier <- read.csv('soldier.csv')
soldier <- read.csv('soldier.csv')
